print(class(fruits))
lst = list(c(2,5,3), 21, sin, TRUE)
print(lst)
M = matrix(c('a','b', 'c', 'd','e','f'), nrow = 2, ncol = 3, byrow = TRUE)
print(M)
a = array(c('green', 'yellow'), dim = c(3,3,2))
print(a)
apple_colours = c('green', 'yellow', 'red', 'yellow', 'green', 'green')
factor_apple = factor(apple_colours)
print(apple_colours)
print(factor_apple)
print(nlevels(factor_apple))
logicaL = TRUE
print(class(logicaL))
numeriC = 23.5
numeric2 = 349
inte <- 2L
compLEX = 2 + 5i
print(charToRaw('Wtf is R'))
fruits = c('orange', 'apple', 'banana')
print(class(fruits))
lst = list(c(2,5,3), 21, sin, TRUE)
print(lst)
M = matrix(c('a','b', 'c', 'd','e','f'), nrow = 2, ncol = 3, byrow = TRUE)
print(M)
a = array(c('green', 'yellow'), dim = c(3,3,2))
print(a)
apple_colours = c('green', 'yellow', 'red', 'yellow', 'green', 'green')
factor_apple = factor(apple_colours)
print(apple_colours)
print(factor_apple)
print(nlevels(factor_apple))
BMI = data.frame(
gender = c("Male", "Male", "Female"),
height = c("168", "179", "150"),
weight = c(89, 92, 52),
age = c(23, 25, 16)
)
print(BMI)
View(BMI)
print(x)
print(mean(x))
x = c(1.71, 2.98, 3.4, 2.17, 1.42)
print(mean(x))
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
logicaL = TRUE
print(class(logicaL))
numeriC = 23.5
numeric2 = 349
inte <- 2L
compLEX = 2 + 5i
print(charToRaw('Wtf is R'))
fruits = c('orange', 'apple', 'banana')
print(class(fruits))
lst = list(c(2,5,3), 21, sin, TRUE)
print(lst)
M = matrix(c('a','b', 'c', 'd','e','f'), nrow = 2, ncol = 3, byrow = TRUE)
print(M)
a = array(c('green', 'yellow'), dim = c(3,3,2))
print(a)
apple_colours = c('green', 'yellow', 'red', 'yellow', 'green', 'green')
factor_apple = factor(apple_colours)
print(apple_colours)
print(factor_apple)
print(nlevels(factor_apple))
BMI = data.frame(
gender = factor(c("Male", "Male", "Female")),
height = c("168", "179", "150"),
weight = c(89, 92, 52),
age = c(23, 25, 16)
)
print(BMI)
knitr::opts_chunk$set(echo = TRUE)
install.packages('tidyverse')
library(tidyverse)
dplyr::arrange()
mpg %>%
dplyr::filter(model == 'a4')
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(displ, year)
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(displ, year)
dplyr::arrange(mpg, displ, year)
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(displ, year)
mpg %>%
dplyr::filter(model == 'a4')
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(cyl, year)
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(year)
mpg %>%
dplyr::filter(model == 'a4')
dplyr::arrange(year)
mpg %>%
dplyr::filter(model == 'a4')
mpg %>%
dplyr::filter(model == 'a4')
dplyr::mutate()
dplyr::arrange(year)
mpg %>%
dplyr::filter(model == 'a4') %>%
dplyr::arrange(year) %>%
dplyr::mutate(old = year < 2000) %>%
dplyr::transmute() %>%
dplyr::select() %>%
dplyr::count() %>%
mpg %>%
dplyr::filter(model == 'a4') %>%
dplyr::arrange(year) %>%
dplyr::mutate(old = year < 2000) %>%
dplyr::transmute() %>%
dplyr::select() %>%
dplyr::count()
mpg %>%
dplyr::filter(model == 'a4') %>%
dplyr::arrange(year) %>%
dplyr::mutate(old = year < 2000)
mpg %>%
dplyr::filter(model == 'a4') %>%
dplyr::arrange(year) %>%
dplyr::mutate(old = year < 2000, full_wheel_drive = drv == "f") %>%
# dplyr::transmute(full_wheel_drive = drv == 'f') %>%
dplyr::select(-drv)
mpg %>%
dplyr::count(model, sort = TRUE)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ.y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ.y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
knitr::opts_chunk$set(echo = TRUE)
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = mpg) +
geom_boxplot(mapping - aes(x = reorder(class, hwy, FUN = median), y = hwy)
ggplot(data = mpg) +
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
ggplot(data = x, mapping = aes(x = x)) +
geom_dotplot()
install.packages('tidyverse')
library(tidyverse)
x = c(1.71, 2.98, 3.4, 2.17, 1.42)
# 1
ggplot(data = x, mapping = aes(x = x)) +
geom_dotplot()
x = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(x, comps)
# 1
ggplot(data = df, mapping = aes(x = x)) +
geom_dotplot()
ggplot(data = df, mapping = aes(x = comps)) +
geom_dotplot()
ggplot(data = df, mapping = aes(x = comps, y = x)) +
geom_dotplot()
# Dane
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(doch_tys, comps)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_dotplot()
ggplot(data = df, mapping = aes(x = doch_tys, y = comps)) +
geom_dotplot()
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_dotplot()
# Dane
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_dotplot()
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps)) +
geom_dotplot()
# Dane
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_dotplot(binwidth = 0.1)
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df.data = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_dotplot(binwidth = 0.1)
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'F')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_point()
# 2
x_mean = mean(x)
x_round = round(mean(x), 2)
print(f('Średnia z próby wynosi {x_mean} ~= {x_round}'))
# 2
x_mean = mean(x)
x_round = round(mean(x), 2)
print(f('Średnia z próby wynosi {x_mean} ~= {x_round}'))
```{r}
install.packages('tidyverse')
install.packages('devtools')
library(tidyverse)
library(devtools)
install.packages("tidyverse")
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'E')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_point()
install.packages('tidyverse')
install.packages('devtools')
library(tidyverse)
library(devtools)
doch_tys = c(1.71, 2.98, 3.4, 2.17, 1.42)
comps = c('A', 'B', 'C', 'D', 'E')
df = data.frame(comps, doch_tys)
# 1
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_point()
x_mean = mean(x)
x_round = round(mean(x), 2)
print(f('Średnia z próby wynosi {x_mean} ~= {x_round}'))
x_mean = mean(x)
x_round = round(mean(x), 2)
print('Średnia z próby wynosi ', x_mean, '~=', x_round)
x_mean = mean(x)
x_round = round(mean(x), 2)
print("Średnia z próby wynosi ", x_mean, "~=", x_round)
x_mean = mean(x)
x_round = round(mean(x), 2)
cat("Średnia z próby wynosi ", x_mean, "~=", x_round)
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_line() +
geom_point()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_line(data=x_mean) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_line(data=data.frame(x_mean, comps)) +
geom_point()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
ggerrorplot(df, comps, doch_tys, desc_stat = "mean") +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_errorbar(df, comps, doch_tys, desc_stat = "mean") +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_errorbar(df, aes(comps, doch_tys),  desc_stat = "mean") +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_errorbar(data=df, mapping=aes(comps, doch_tys),  desc_stat = "mean") +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_errorbar(data=df, mapping=aes(comps, doch_tys),  stat = "mean") +
geom_point()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_errorbar(data=df, mapping=aes(comps, doch_tys)) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_linerange(aes(xmin='A', xmax='E')) +
geom_point()
# 3
plot(df)
plot(doch_tys)
abline(h=x_mean, col="blue")
plot(doch_tys)
plot(comps)
plot(doch_tys)
axis(1, labels=comps)
plot(doch_tys)
axis(1, at=1:5, labels=comps)
abline(h=x_mean, col="blue")
plot("Doch tys", doch_tys)
# 3
plot(doch_tys)
axis(1, at=1:5,labels=comps)
abline(h=x_mean, col="blue")
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline() +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(data=x_mean) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(data=x_mean, slope = 0) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(data=x_mean, slope = 0, intercept = 0) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(data=x_mean, slope = FALSE, intercept = FALSE) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(data=x_mean, slope = x_mean, intercept = FALSE) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys-x_mean, ymax=doch_tys+x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys, ymax=doch_tys))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbarh(aes(ymin=doch_tys, ymax=doch_tys))
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys, ymax=doch_tys))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(xmin=doch_tys, xmax=doch_tys))
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys, ymax=doch_tys))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=x_mean, ymax=x_mean))
geom_point()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=x_mean + doch_tys, ymax=x_mean - doch_tys))
geom_point()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar()
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(xmin=x_mean + doch_tys, xmax=x_mean - doch_tys))
# 3
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=x_mean + doch_tys, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys - x_mean, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys[0] - x_mean, ymax=x_mean))
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=1.71 - x_mean, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
#geom_errorbar(aes(ymin=1.71 - x_mean, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=3.0 - x_mean, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_errorbar(aes(ymin=doch_tys - x_mean, ymax=x_mean))
geom_point()
ggplot(data = df, mapping = aes(x = comps, y = doch_tys)) +
geom_abline(intercept = x_mean, slope=0) +
geom_linerange(aes(ymin=doch_tys - x_mean, ymax=x_mean))
geom_point()
# 3.84 i 4.41
# to jest zle
# q_1 = 3.84 + .25 * (4.41 - 3.84)
# print(q_1)
# me = 3.84 + .50 * (4.41 - 3.84)
# print(me)
# q_3 = 3.84 + .75 * (4.41 - 3.84)
# print(q_3)
quantile(dane, 0.25, type=6)
(dane, 0.25, type=6)
quantile(dane, 0.50, type=6)
quantile(dane, 0.75, type=6)
print(i_1)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
source('~/_GitHub/learning/zad_3_4.R', echo=TRUE)
Nie ma sensu robi
source('~/_GitHub/learning/zaj_1.R', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zaj_1.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_2.R', encoding = 'UTF-8', echo=TRUE)
Mediana_ruch = c(NA, Mediana(dane, 3), NA)
source('~/_GitHub/learning/zad_4.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_4.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_4.R', encoding = 'UTF-8', echo=TRUE)
duze <- c()
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
setwd("~/_GitHub/learning")
source('~/_GitHub/learning/zad_5.R', echo=TRUE)
print(dane)
print(wielkosc)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
source('~/_GitHub/learning/zad_5.R', encoding = 'UTF-8', echo=TRUE)
